[package]
name = "bitnet-metal"
version = "0.2.4"
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
description = "Metal GPU acceleration for BitNet on Apple Silicon"
keywords = ["bitnet", "metal", "gpu", "apple-silicon", "acceleration"]
categories = ["science", "graphics"]

[features]
default = ["std", "mps", "unified-memory", "metal"]
std = []
# Enable Metal Performance Shaders integration
mps = ["dep:objc", "dep:cocoa"]
# Enable unified memory optimizations
unified-memory = []
# Enable Neural Engine integration (experimental)
ane = ["dep:objc", "dep:cocoa"]
# Enable MLX integration for Apple Silicon
mlx = ["dep:mlx-rs"]
# Enable MLX-Metal interoperability
mlx-metal = ["mlx", "mps"]
# Enable full Apple Silicon optimization (Metal + MLX + ANE)
apple-silicon = ["mps", "mlx", "ane", "unified-memory", "metal"]
# Enable Metal GPU support (macOS only)
metal = ["dep:metal"]

[dependencies]
# Metal bindings
metal = { workspace = true, optional = true }
objc = { workspace = true, optional = true }
cocoa = { workspace = true, optional = true }

# MLX integration
mlx-rs = { workspace = true, optional = true }

# Core dependencies
candle-core.workspace = true
serde.workspace = true
anyhow.workspace = true
thiserror.workspace = true

# Memory management
libc = "0.2"
mach = "0.3"

# Optional Apple frameworks
# core-ml = { version = "0.1", optional = true }  # Not available on crates.io

[dev-dependencies]
criterion.workspace = true
proptest.workspace = true
tempfile = "3.0"

# macOS-specific dependencies (now compatible with resolved cocoa versions)
[target.'cfg(target_os = "macos")'.dependencies]
core-foundation.workspace = true
core-graphics.workspace = true


[build-dependencies]
# For compiling Metal shaders
cc = "1.0"